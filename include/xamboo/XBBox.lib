<?php

/*
    XBBox.lib, Xamboo
    Contains the basic class to contains a page object instance
    (c) 2012 Philippe Thomassigny

    This file is part of Xamboo

    Xamboo is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Xamboo is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Xamboo.  If not, see <http://www.gnu.org/licenses/>.
*/

/* @UML_Box
|------------------------------------------------------------------|
| XBBox: page object                                              |
|------------------------------------------------------------------|
| # id: string                                                     |
| # lang: boolean                                                  |
| # entries: Array(id => string)                                   |
|------------------------------------------------------------------|
| + new XBBox($data, $id = null, $lang = null)                    |
| + getId(): string                                                |
| + getLang(): string                                              |
| + getEntry($id: string): string                                  |
| + delEntry($id: string): void                                    |
| + setEntry($id: string, $data: string): void                     |
| # serial($data: array): void                                     |
| # unserial($data: array): void                                   |
| + __toString(): string                                           |
|------------------------------------------------------------------|
@End_UML_Box */

// Class to manage a page object
class XBBox extends engineBox
{
  private $descriptordata;

  public function __construct($data)
  {
    $this->descriptordata = $data;
    parent::__construct($data);
  }

  public function run($engine, $params)
  {
    return $this->getOutputData('result');
  }

  protected function selectInput($box, $id, $input)
  {
    // fijamos la ruta absoluta para language y template
    // lo demas por defecto
    if ($input['from'] == 'inline' && ($box->getInputType($id) == Box::TEMPLATE || $box->getInputType($id) == Box::LANGUAGE) && substr($input['data'], 0, 1) != '/')
    {
      $input['data'] = $this->base->REPOSITORYDIR . 'pages/' . $input['data'];
    }
    return parent::selectInput($box, $id, $input);
  }
  
  
  protected function serial(&$data)
  {
    $data['descriptordata'] = $this->descriptordata;
  }

  protected function unserial($data)
  {
    $this->descriptordata = $data['descriptordata'];
    parent::__construct($this->descriptordata);
  }

  public function __toString()
  {
    return 'Box flow page';
  }

  function generatePHP()
  {
  
  
  }
  
}

?>